протокол общения рисовалки и считалки. версия 1

протокол предназначен для соединения рисовалки с некоторой конкретной считалкой

RPC вызовы
формат вызова - JSON
формат ответа - текстовый или JSON
	JSON ответ обязательно начинается с фигурной скобки {
	текстовый -  с любого другого символа
нотация - camelCase
в конце запроса и ответа следует символ с кодом 0


неверный запрос
===============

если запрос не может быть интерпретирован, возвращается строка
{"error":"invalid request"}


version
=======

получение информации о протоколе
параметры - нет
{"function":"version"}
возвращает информацию о версии протокола
{"version":1}
version - целочисленный идентификатор версии протокола


getCapabilities
===============

получение информации о возможностях считалки
параметры - нет
{"function":"getCapabilities"}

возвращает информацию о начальных параметрах считалки, о методах расчёта, и о вычисляемых величинах

features - массив характеристик решалки
    restartable - допускает перезапуск метода initSolver
    dynamic - расчитывает эволюцию системы во времени с помощью evolve

initial - массив наименований полей начальных параметров
results - массив наименований полей результатов расчёта доступных для получения

каждый параметр задаётся своими характеристиками:
name - имя
type - тип
description - описание
isIndependent - флаг, обозначающий независимые переменные в результатах расчёта, по умолчанию false
unit - наименование единицы измерения

для скалярных типов указывается наименование int, double 
для типа array указывается 
    elementType - тип значения
    count - количество элементов. может быть целочисленным или содержать имя другого целочисленного параметра

results может содержать лишь скалярные величины


{"features":
    [
        "restartable",
        "dynamic"
    ],
 "initial":
	[
		{"name":"g","type":{"typename":"double"},"description":"gravity field strength","unit":"ms^-2"}
		{"name":"Nx","type":{"typename":"int"},"description":"number of points along x axis"}
		{"name":"u0","type":{"typename":"array","elementType":"double","count":"Nx"},"description":"Initial U distribution"}
	],
 "results":
    [
        {"name":"t","type":"double","description":"time","unit":"s","isIndependent":"true"},
        {"name":"x","type":"double","description":"x coordinate","unit":"m","isIndependent":"true"},
        {"name":"u","type":"double","description":"u field value","unit":"J"}
        {"name":"v","type":"double","description":"velocity value","unit":"ms^-1"}
    ]
}

initSolver
==========

инициализация решалки. 
параметры - в соответствии с данными из getSolverInitialData
{
	"function":"initSolver",
	"params":{
		"g":9.81,
		"Nx":10,
		"u0":[0,0.1,0.2,0.1,0,0,0,0,0,0]
	}
}
вызывается лишь единожды либо допускает повторные вызовы в зависимости от реализации

возвращеат успешность инициализации; при возникновении ошибки возвращает описание ошибки
{"success":"false","error":"у считалки сегодня плохое настроение"}


evolve
======

совершает шаги по времени для решалок динамических систем
параметры
stepsNumber - количество шагов по времени, не может быть использован совместно с finalTime
finalTime - значение момента времени, до которого следует производить расчёт.
            не может быть использован совместно с stepsNumber
{"function":"evolve","stepsNumber":10}

возвращает 
success - успешность расчёта;
time - значение момента времени для текущего рассчитанного состояния 
при возникновении ошибки возвращает описание ошибки
{"success":"true","time":0.03}


getResults
==========

возвращает результаты расчёта в формате записей, разделённых табуляцией
параметры
names - массив наименований запрашиваемых полей, либо значение "all"
{"function":"getResults","names":["t","x","u"]}

возвращает запрошенные результаты в виде таблицы, первая строка содержит наименования полей
t      x       u
0.03    0.0     0
0.03    0.111   0
0.03    0.222   0.1
0.03    0.333   0.2
0.03    0.444   0.1
0.03    0.555   0
0.03    0.666   0
0.03    0.777   0
0.03    0.888   0
0.03    1.000   0
